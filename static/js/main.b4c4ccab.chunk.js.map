{"version":3,"sources":["components/FilterListItem.js","components/CamanCanvas.js","App.js","index.js"],"names":["resetValue","event","init","onChange","target","value","name","attributes","FilterListItem","filter","range","filterList","min","max","step","curValue","className","onClick","id","type","caman","window","Caman","PresetButton","preset","presetName","active","buttonRef","useRef","myButton","current","bsButton","Button","getInstance","toggle","ref","CreatePresetList","presetList","presetsPretty","buttonList","entries","index","isActive","push","createFilterList","rangeList","rangeFull","rangeHalf","filters","image","htmlCanvas","this","render","isRendering","prevRenderList","curRenderList","backlog","updateImgFn","throttledEventListen","throttle","Event","listen","job","JSON","stringify","CamanCanvas","updateImage","useState","setPresetList","setFilterList","adjustmentList","setAdjustmentList","throttled","useEffect","newList","console","log","revert","alt","src","parseFloat","currentPresets","data-bs-target","data-bs-toggle","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4c4ccab.chunk.js","sourcesContent":["const resetValue = (event, init, onChange) => {\n  event.target.value = init;\n  event.target.name = event.target.attributes.name.value;\n  onChange(event, init);\n}\n\nconst FilterListItem = ({ filter, range, filterList, onChange }) => {\n  const min = range[\"min\"] != null ? range[\"min\"] : -100;\n  const max = range[\"max\"] != null ? range[\"max\"] : 100;\n  const step = range[\"step\"] || 1;\n  const init = range[\"init\"] || 0;\n  const curValue = (filterList[filter] != null) ? filterList[filter] : init;\n\n  return (\n    <div className=\"col\">\n      <div className=\"row gx-1 hover\">\n\n        <label name={filter} className=\"col-3\"\n          onClick={(event) => resetValue(event, init, onChange)}>{filter}</label>\n\n        <div className=\"col-8\">\n          <input id={filter} name={filter} className=\"form-range slider\"\n            type=\"range\" min={min} max={max} step={step}\n            value={curValue} onChange={(event) => onChange(event, init)} />\n        </div>\n\n        <span name={filter} className=\"col-1\"\n          onClick={(event) => resetValue(event, init, onChange)}>{curValue}</span>\n\n      </div>\n    </div>\n  );\n};\n\nexport default FilterListItem;\n","import { useState, useEffect, useRef } from 'react';\nimport { Button } from 'bootstrap';\nimport throttle from 'lodash/throttle';\n\nimport FilterListItem from './FilterListItem'\n// import usePrevious from './usePrevious'\nconst caman = window.Caman;\n\n\n// TO DO:\n// channels {red: [-100,100], green: [-100,100], blue:[-100:100]}\n// stackBlur [0, 20]?\n// colorize [R,G,B, [0-100]] || ['#eee', [0-100]]\n// curves [[R,G,B], [P0x,P1x], [P2], [P3], [P4]]\n// fillColor [R,G,B] || ['#eee']\n// Greyscale(), Invert()\n\n// Stage 2\n// Crop, Resize, Preset strength, undo/redo\n// vignette, rectangularVignette, tiltShift, radialBlur,\n// boxBlur?, heavyRadialBlur, gaussianBlur, motionBlur,\n// edgeEnhance, edgeDetect, emboss, posterize,\n\n\n// To Do: Change list of presets to include pretty names\nfunction PresetButton({ preset, presetName, onClick, active }) {\n  const buttonRef = useRef();\n\n  var myButton = buttonRef.current\n  var bsButton = Button.getInstance(myButton)\n\n  if (!bsButton) { bsButton = new Button(myButton, { toggle: \"button\" }) }\n\n  return (\n    <div className=\"col p-1 d-grid\">\n      <button className={`btn btn-primary ${active ? 'active' : null}`} ref={buttonRef} id={preset}\n        onClick={(event) => { onClick(event) }} type=\"button\">\n        {`${presetName}`}\n      </button>\n    </div >\n  )\n}\n\nfunction CreatePresetList({ presetList, onClick }) {\n  const presets = [\n    \"vintage\", \"lomo\", \"clarity\", \"sinCity\", \"sunrise\", \"crossProcess\", \"orangePeel\",\n    \"love\", \"grungy\", \"jarques\", \"pinhole\", \"oldBoot\", \"glowingSun\",\n    \"hazyDays\", \"herMajesty\", \"nostalgia\", \"hemingway\", \"concentrate\"\n  ];\n\n  const presetsPretty = [\n    \"Vintage\", \"Lomo\", \"Clarity\", \"Sin City\", \"Sunrise\", \"Cross Process\", \"Orange Peel\",\n    \"Love\", \"Grungy\", \"Jarques\", \"Pinhole\", \"Old Boot\", \"Glowing Sun\",\n    \"Hazy Days\", \"Her Majesty\", \"Nostalgia\", \"Hemingway\", \"Concentrate\"\n  ];\n\n  let buttonList = []\n  for (const [index, preset] of presets.entries()) {\n    let isActive = presetList[preset] ? true : false\n    buttonList.push(\n      <PresetButton key={preset} preset={preset} presetName={presetsPretty[index]}\n        onClick={onClick} active={isActive} />\n    )\n  }\n  return buttonList;\n}\n\nfunction createFilterList(filterList, onChange) {\n  // -100 to 100\n  const filtersFullRange = [\"brightness\", \"contrast\", \"vibrance\", \"saturation\", \"exposure\"];\n  // 0 to 100\n  const filtersHalfRange = [\"hue\", \"sepia\", \"noise\", \"sharpen\", \"clip\"];\n  const filtersSpecial = { \"gamma\": { \"min\": 0, \"init\": 1, \"max\": 10, \"step\": 0.1 } };\n\n  let rangeList = {}\n\n  const rangeFull = { \"min\": -100, \"init\": 0, \"max\": 100 }\n  // Must be for...of; for...in replaces names with indicies\n  for (const filter of filtersFullRange) { rangeList[filter] = rangeFull; }\n\n  const rangeHalf = { \"min\": 0, \"init\": 0, \"max\": 100 }\n  for (const filter of filtersHalfRange) { rangeList[filter] = rangeHalf; }\n  rangeList = { ...rangeList, ...filtersSpecial };\n\n  let filters = [];\n  // Must be for...in, rangeList isn't iterable\n  for (const filter in rangeList) {\n    filters.push(\n      <FilterListItem key={filter} filter={filter} range={rangeList[filter]}\n        filterList={filterList} onChange={onChange} />\n    )\n  }\n\n  return filters;\n}\n\n\n// window.Caman.DEBUG = true\nlet image = \"WP.png\";\n// let image = \"142.jpg\";\nlet htmlCanvas = \"#canvas\"\ncaman(htmlCanvas, image, function () {\n  this.render();\n});\n\nlet isRendering = false;\nlet prevRenderList = {}, curRenderList = {};\nlet backlog = 0;\nlet updateImgFn = () => { };\nconst throttledEventListen = throttle((curRenderList) => (updateImgFn(curRenderList)), 1000);\n\ncaman.Event.listen(\"processStart\", function (job) {\n  // console.log(\"Start:\", job.name);\n  isRendering = true;\n});\n\ncaman.Event.listen(\"processComplete\", function (job) {\n  // console.log(\"Finish:\", job.name);\n  isRendering = false;\n  backlog = 0;\n  if (JSON.stringify(prevRenderList) !== JSON.stringify(curRenderList)) {\n    // console.log(\"Updating from prev render\", prevRenderList, curRenderList)\n    // updateImgFn(curRenderList);\n    throttledEventListen(curRenderList);\n  }\n});\n\n\nconst CamanCanvas = () => {\n  updateImgFn = updateImage;  // Save function so Caman Event listener can call it\n\n  /* Update the image after our adjustments change */\n  const [presetList, setPresetList] = useState({});\n  const [filterList, setFilterList] = useState({});\n  const [adjustmentList, setAdjustmentList] = useState({});\n\n  // Throttled could take an options object, but it appears to work fine with default\n  const throttled = useRef(throttle((adjustmentList) => (updateImage(adjustmentList)), 100));\n  // const prevList = usePrevious(adjustmentList);\n  useEffect(() => {\n    // if (JSON.stringify(prevList) !== JSON.stringify(adjustmentList)) {\n    if (JSON.stringify(prevRenderList) !== JSON.stringify(adjustmentList)) {\n\n      if (!isRendering) {\n        if (backlog) {\n          isRendering = true;\n        }\n        // console.log(\"Throttle rendering with\", adjustmentList, backlog);\n        throttled.current(adjustmentList);\n        backlog += 1;\n      }\n      // else {\n      //   console.log(\"Skipped, rendering\");\n      // }\n\n    }\n  }, [adjustmentList]);\n\n  /* Combine presets and filters into master adjustment list */\n  useEffect(() => {\n    const newList = { ...presetList, ...filterList }\n    setAdjustmentList(curRenderList = newList);\n  }, [filterList, presetList]);\n\n\n  /* Sliders Callback */\n  const updateFilters = (event, init) => {\n    const filter = event.target.name;\n    const value = parseFloat(event.target.value);\n    console.log(\"Updating\", filter);\n\n    let newList;\n    if (value === init) {\n      console.log(`Reset ${filter} to default`)\n      newList = { ...filterList };\n      delete newList[filter];\n    } else {\n      newList = { ...filterList, [filter]: value };\n    }\n\n    // if (JSON.stringify(newList) !== JSON.stringify(filterList)) {\n    setFilterList(newList);\n    // }\n  }\n\n  /* Button Callback */\n  const updatePresets = (event) => {\n    const preset = event.target.id;\n\n    // console.log(\"Updating preset\", preset);\n\n    let currentPresets = {};\n    if (!presetList[preset]) { currentPresets[preset] = 1; }\n\n    setPresetList(currentPresets);\n  }\n\n  function updateImage(adjustmentList) {\n    prevRenderList = adjustmentList;\n    caman(htmlCanvas, function () {\n      console.log(\"~~~~ UPDATE IMAGE ~~~~\")\n      console.log(adjustmentList)\n\n      this.revert(false);\n      for (const filter in adjustmentList) {\n\n        if (this[filter]) {\n          this[filter](adjustmentList[filter]);\n        } else {\n          console.log(`${filter} is not a valid filter.`);\n          let newList = { ...adjustmentList };\n          delete newList[filter];\n          // Invalid filters will usually be at the end of the list because they get removed each render\n          // So we can just render and it will look okay until the updated re-render\n          this.render();\n          setAdjustmentList(newList);\n          return;\n        }\n      }\n      this.render();\n    });\n  }\n\n\n  return (\n    <>\n      <div className=\"edit-pane bg-gray container-lg text-center p-4 lh-1\">\n        <img alt=\"Editing Canvas\" className=\"img-fluid\" id=\"canvas\" src={image}></img>\n      </div>\n\n      <div id=\"filterHolder\">\n        <div id=\"filterList\" className=\"container overflow-hidden bg-dark text-center my-3 p-2\">\n\n          <div className=\"row row-cols-1 row-cols-md-2 center\">\n            {createFilterList(filterList, updateFilters)}\n          </div>\n\n          <hr />\n          <div className=\"row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-6 m-1\">\n            <CreatePresetList presetList={presetList} onClick={updatePresets} />\n          </div>\n\n          <hr />\n          <div className=\"py-2\">\n            <button className=\"btn btn-primary\" data-bs-target=\"#collapseTarget\" data-bs-toggle=\"collapse\">\n              Toggle collapse\n            </button>\n            <div className=\"collapse\" id=\"collapseTarget\">\n              This is the toggle-able content!\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default CamanCanvas;\n","import CamanCanvas from './components/CamanCanvas'\n\nfunction App() {\n\n  return (\n    <div className=\"App text-light\">\n\n      <div className=\"container bg-dark px-4 py-1 my-3\">\n        <h1 className=\"text-primary display-2\">\n          <i className=\"bi bi-image-fill\"></i> Caman + React\n        </h1>\n      </div>\n\n      <CamanCanvas />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./custom.scss\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}